#    -*- mode: org -*-


Archived entries from file /home/sf/Sync/informal-systems/mvd/themis-tracer/design-notes.org


* DONE Need to store repo paths as *absolute paths*
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-03-05 Fri 10:19
  :ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
  :ARCHIVE_OLPATH: Tasks
  :ARCHIVE_CATEGORY: design-notes
  :ARCHIVE_TODO: DONE
  :END:
Otherwise we can't find them again after moving dirs! Duh!

* DONE Use a lightweight database for storing info, rather than the file system
:PROPERTIES:
:ARCHIVE_TIME: 2021-03-06 Sat 15:08
:ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
:ARCHIVE_OLPATH: Tasks
:ARCHIVE_CATEGORY: design-notes
:ARCHIVE_TODO: DONE
:END:

* DONE Load units into db on repo add
:PROPERTIES:
:ARCHIVE_TIME: 2021-03-06 Sat 17:25
:ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
:ARCHIVE_OLPATH: Tasks
:ARCHIVE_CATEGORY: design-notes
:ARCHIVE_TODO: DONE
:END:
- [X] Implement =unit= submodule in =db=
  + [X] Add unit
    - [X] Insert to =unit= table
    - [X] Insert to =repo_unit= table
- [X] Add routine to parse units from a file in the repo and load the units into
  the db
- [X] Add routine to run prev on every file in repo
- [X] Add command to list logical units in context
  + [X] Add db fn to get all units in current context

* DONE Test error conditions of repo management
:PROPERTIES:
:ARCHIVE_TIME: 2021-03-06 Sat 18:47
:ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
:ARCHIVE_OLPATH: Tasks
:ARCHIVE_CATEGORY: design-notes
:ARCHIVE_TODO: DONE
:END:
- [X] Adding the same repo twice
- [X] Adding repos when no context is active
- [X] Adding units to repos in different contexts, ensure we only show the repos
  for the current context.

* DONE Refine =unit list= command
:PROPERTIES:
:ARCHIVE_TIME: 2021-03-07 Sun 14:48
:ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
:ARCHIVE_OLPATH: Tasks
:ARCHIVE_CATEGORY: design-notes
:ARCHIVE_TODO: DONE
:END:
https://github.com/informalsystems/themis-tracer/issues/16

- [X] Make output from =unit list= much simpler and easier to read
  + [X] Investigate libs for terminal output
  + [X] Implement pretty output
- [X] Add =--format= option for =unit list=
- [X] Add a command =unit show TAG= that gives complete info for a unit
- [X] Add =--format= option for =unit show=


* DONE Implement sync command
:PROPERTIES:
:ARCHIVE_TIME: 2021-03-07 Sun 19:30
:ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
:ARCHIVE_OLPATH: Tasks
:ARCHIVE_CATEGORY: design-notes
:ARCHIVE_TODO: DONE
:END:
- [X] Add db function to purge all logical units from a given repo
- [X] Implement procedure to purge units, then reload them for a repo

* DONE Replace =pandoc_ast= with =scraper=
:PROPERTIES:
:ARCHIVE_TIME: 2021-03-11 Thu 17:15
:ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
:ARCHIVE_OLPATH: Tasks
:ARCHIVE_CATEGORY: design-notes
:ARCHIVE_TODO: DONE
:END:
- [X] Change ~ARGS~ to *not* be standalone and go ~--to html~ file:./src/pandoc.rs::37
- [X] rework ~pandoc_from_bytes~ to html_from_bytes file:./src/pandoc.rs::41
  - Should become a function ~&[u8] -> Result<scraper::Html~
  - Use
    https://docs.rs/scraper/0.12.0/scraper/html/struct.Html.html#method.parse_fragment
    to read the html fragment (we don't care about full HTML document structure).
- [X] Rework ~parse_string~ file:./src/pandoc.rs::53
- [X] Rework ~parse_file~ file:./src/pandoc.rs::108
- [X] Move ~parse_ast~ and ~logical_units_of_deflist~ from
  file:src/artifact.rs::74  into the ~pandoc~ module, have it return a tuple of
  definition and markdown contents.


* DONE Add linkification of md files
:PROPERTIES:
:ARCHIVE_TIME: 2021-03-21 Sun 17:53
:ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
:ARCHIVE_OLPATH: Tasks
:ARCHIVE_CATEGORY: design-notes
:ARCHIVE_TODO: DONE
:END:
- [X] Add tests to ensure anchored (and other styled tags) are parsed correctly
- [X] Use kuchiki to rewrite naked tags in definition terms to IDed anchors
- [X] Use kuchiki to rewrite unlinked tag refs to links
  + [X] Select text nodes
  + [X] Check if a =text node= contains a tag-ref
    - [X] Parse text into a vec of enums ~Text(String) | UnitRef(String)~
    - [X] Generate a =Ref link= for each ~UnitRef~
      + [X] Get location by querying the db for locations of logical units.
      + [X] Create a link element
    - [X] Add =Text= after text node
    - [X] Add =Ref= after text node
    - [X] Remove =text node= (after all parts text and refs parts are added)
- [X] Use pandoc to convert HTML back to markdown, using the =--reference-links=
  flag.
- [X] Add CLI to call command
- [X] Add artifact to path
- [X] Add test cases
- [X] Add test case for error condition (when reference link is invalid)
- [X] Make linkify command take a list of files
- [X] Rework anchoring to support gfm
  + [X] Turn pandoc::write_file to pandoc::html_to_pandoc: String -> String
  + [X] Use flag to trigger gfm compat
  + [X] On linkification, don't anchor in html when gfm is true
  + [X] Implement simple regex rule to anchor tags
- [X] Check whether linkification is idempotent

* DONE Make =context new= also switch the context
:PROPERTIES:
:ARCHIVE_TIME: 2021-03-22 Mon 16:12
:ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
:ARCHIVE_OLPATH: Tasks
:ARCHIVE_CATEGORY: design-notes
:ARCHIVE_TODO: DONE
:END:

* DONE Actually fetch upstream git data
:PROPERTIES:
:ARCHIVE_TIME: 2021-03-23 Tue 13:30
:ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
:ARCHIVE_OLPATH: Tasks
:ARCHIVE_CATEGORY: design-notes
:ARCHIVE_TODO: DONE
:END:
- [X] Get the =upstream= (fall back =origin=) URI from repo when it is added to
  a context
  + [X] remote = =find_remote(name)=: https://docs.rs/git2/0.13.17/git2/struct.Repository.html#method.find_remote
  + [X] =remote.url=: https://docs.rs/git2/0.13.17/git2/struct.Remote.html#method.url
  + [X] Make sync also sync the upstream URL
- [X] Compute the url for linkification from the remote git URL (specific to github to start)

* DONE Store the repo's default branch
:PROPERTIES:
:ARCHIVE_TIME: 2021-03-23 Tue 16:41
:ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
:ARCHIVE_OLPATH: Tasks
:ARCHIVE_CATEGORY: design-notes
:ARCHIVE_TODO: DONE
:END:
https://docs.rs/git2/0.13.17/git2/struct.Remote.html#method.default_branch

* DONE Fix computing of git URL
:PROPERTIES:
:ARCHIVE_TIME: 2021-03-23 Tue 16:41
:ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
:ARCHIVE_OLPATH: Tasks
:ARCHIVE_CATEGORY: design-notes
:ARCHIVE_TODO: DONE
:END:
- We need to go to the =user/repo/tree/<branch>/path/to/asset= So need to add in =/tree/<branch>/=
- [X] Do default branch
- [X] Fix URL normalization

* DONE Add logging
:PROPERTIES:
:ARCHIVE_TIME: 2021-03-23 Tue 16:41
:ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
:ARCHIVE_OLPATH: Tasks
:ARCHIVE_CATEGORY: design-notes
:ARCHIVE_TODO: DONE
:END:
- [X] Add logging to debug linkification

* DONE Generate static site for context
:PROPERTIES:
:ARCHIVE_TIME: 2021-04-04 Sun 20:06
:ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
:ARCHIVE_OLPATH: Tasks
:ARCHIVE_CATEGORY: design-notes
:ARCHIVE_TODO: DONE
:END:
- [X] Select HTML generation lib
- [X] Build graph of units [TRC-GRAPH.1]
  - [X] Use https://docs.rs/petgraph/0.5.1/petgraph/
  - [X] get =db::unit::all_in_context=
  - [X] implement =graph::units=
    + [X] enter each into a =map: tag -> unit=
    + [X] using a graph
    + [X] for each unit
      - [X] add it to the graph
      - [X] add it's index to the map
      - [X] If it has a parent
        + [X] look up it's parent in the map.
          - [X] ensure the parent is added
          - [X] add an edge from parent to child
- [X] Dot graph, with links to units (and description on hover?)
  - Using https://docs.rs/petgraph/0.5.1/petgraph/dot/struct.Dot.html
- [X] Generate nested deflist from graph of entries
  + [X] Get external source nodes
  + [X] For each urnode
    - [X] Create <dt> with tag
    - [X] Create <dd> with
      - [X] content
      - [X] get children,
      - [X] create detail including recursive application of above
- [X] Think about how to relate/display units from different artifacts and repos
  + [X] tree that can be collapsed/unfolded?
    - see https://jsfiddle.net/te366hu2/2/
    - [X] give indication of when there are children

* DONE Extract units from source code
:PROPERTIES:
:ARCHIVE_TIME: 2021-04-05 Mon 19:37
:ARCHIVE_FILE: ~/Sync/informal-systems/mvd/themis-tracer/design-notes.org
:ARCHIVE_OLPATH: Tasks
:ARCHIVE_CATEGORY: design-notes
:ARCHIVE_TODO: DONE
:END:
- [X] Add =SourceFile= type
  + [X] Implement Source for
    - [X] Markdown
    - [X] Rust
- [X] Run =Artifact::from_file= through the =Source=
- [X] Add unit tests for source extraction
- [X] Tie source unit extraction into CLI (by searching for =.rs= files)
  + [X] See if we can ignore hidden dirs
- [X] Relativize unit paths to repo
- [X] Add integration tests
